name: Docker build

# Controls when the workflow will run
# Currently just running on release publish
on:
  release:
    types:
      - published
      
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to CNTK Quay
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_CNTK_USERNAME }}
          password: ${{ secrets.QUAY_CNTK_TOKEN }}

      - name: Docker Module meta
        id: module-meta
        uses: docker/metadata-action@v4 
        # use release tag from event
        with:
          # list of Docker images to use as base name for tags
          images: |
            quay.io/cloudnativetoolkit/masauto

      - name: Docker Bundle meta
        id: bundle-meta
        uses: docker/metadata-action@v4 
        # use release tag from event
        with:
          # list of Docker images to use as base name for tags
          images: |
            quay.io/cloudnativetoolkit/masauto-bundle

      - name: Build and push Module
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile

          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.module-meta.outputs.tags }}
          labels: ${{ steps.module-meta.outputs.labels }}

      # login to repo again to avoid 401 on token cache timeout
      - name: Login to CNTK Quay
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_CNTK_USERNAME }}
          password: ${{ secrets.QUAY_CNTK_TOKEN }}

      - name: Build and push Bundle
        uses: docker/build-push-action@v3
        with:
          context: .
          file: bundle.Dockerfile

          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.bundle-meta.outputs.tags }}
          labels: ${{ steps.bundle-meta.outputs.labels }}          

  verify:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Verify
        run: |
          echo "Success"
