# Adds Predict latest release to an existing MAS installation
#
# Predict will be deployed and configured. Note this app has several dependencies
#
# Dependencies:
# - CP4D Foundation
# - CP4D Services: wsl, wml, spark, aiopenscale, spss (as of mas v8.10)
# - Maximo Monitor
# - Maximo Health
#
- hosts: localhost
  any_errors_fatal: true
  collections:
    - community.kubernetes
    - community.general
    - operator_sdk.util
    - kubernetes.core
    - ibm.mas_devops
    - ibm.cloudcollection

  vars:
    cr_kind: "Predict"

    # Cluster-wide dependencies for MAS 
    ibm_entitlement_key: "{{ ibm_entitlement_key }}"
    
    # Application Installation
    mas_app_id: predict
    mas_app_channel: "{{ mas_app_channel }}"
    
    # Set default for cpd admin username
    cpd_admin_username: "admin"

    # Application Configuration
    mas_workspace_id: "{{ mas_workspace_id }}"

    # Entitlement key can be passed by either the key or a secret name
    ibm_entitlement_secret: "{{ ibm_entitlement_secret }}"
    
  pre_tasks:
    # Check if Predict is already installed first.
    - include_tasks: "{{ playbook_dir }}/../tasks/preinstall_check.yml"

    # Lookup entitlement key via secret if it's declared and the ibm_entitlement_key isn't
    - include_tasks: "{{ playbook_dir }}/../tasks/lookup_entitlement.yml"

    # For the full set of supported environment variables refer to the playbook documentation
    - name: Check for required environment variables
      assert:
        that:
          - ibm_entitlement_key is defined and ibm_entitlement_key != ""
          - mas_app_channel is defined and mas_app_channel != ""
          - cpd_product_version is defined and cpd_product_version != ""
          - cpd_instance_namespace is defined and cpd_instance_namespace != ""
          - mas_instance_id is defined and mas_instance_id != ""
        fail_msg: "One or more required variables are not defined"

    # Create masconfig directory based on instance_id
    - include_tasks: "{{ playbook_dir }}/../tasks/masconfig_setup.yml" 

    # Lookup admin username/pw via secret
    - name: "Lookup CPD Admin Password"
      ignore_errors: true      
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: "admin-user-details"
        namespace: "{{ cpd_instance_namespace }}"
      register: admin_credentials 
    
    - name: "Set cpd admin credentials"
      when: admin_credentials.api_found
      ignore_errors: true
      set_fact:
        cpd_admin_password: "{{ admin_credentials.resources[0].data.initial_admin_password | b64decode }}"    

    # Lookup and set cpd route
    - name: "Lookup CPD Route"
      ignore_errors: true      
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Route
        name: "cpd"
        namespace: "{{ cpd_instance_namespace }}"
      register: dashboard_route 
    
    - name: "Set cpd dashboard route"
      when: dashboard_route.api_found
      ignore_errors: true
      set_fact:
        cpd_url: "https://{{ dashboard_route.resources[0].spec.host }}"
  
  roles:
    # run the suite config incase a dependency was installed and didn't get configured yet
    - role: ibm.mas_devops.gencfg_watsonstudio
    - role: ibm.mas_devops.suite_config
    - role: pause #pause for 5mins to let db2 settle
    - role: ibm.mas_devops.suite_app_install
      vars:
        mas_entitlement_key: "{{ ibm_entitlement_key }}"
    - role: ibm.mas_devops.suite_app_config
      vars:   
        cpd_url: "{{ cpd_url }}"
        cpd_product_version: "{{ cpd_product_version }}"

  post_tasks:
    # Set ready status to true
    - name: "Set ready status of CR to True"
      k8s_status:
        api_version: masauto.ibm.com/v1alpha1
        kind: "{{ cr_kind }}"
        name: "{{ ansible_operator_meta.name }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
        status:
          Ready: "True"