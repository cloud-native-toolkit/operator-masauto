# Adds Assist latest release to an existing MAS Core 8.8.x + IoT 8.5.x installation
#
# Assist will be configured to use the same db2 instance that IoT is using
#
# Dependencies:
# - Core is installed
# - IoT is installed
# - CP4D foundation installed (WD will be installed)
#
- hosts: localhost
  any_errors_fatal: true
  collections:
    - community.kubernetes
    - community.general
    - operator_sdk.util
    - kubernetes.core
    - ibm.mas_devops
    - ibm.cloudcollection

  vars:
    # Cluster-wide dependencies for MAS 
    mas_config_dir: "~/masconfig"
    ibm_entitlement_key: "{{ ibm_entitlement_key }}"
    mas_instance_id: "{{ mas_instance_id }}"
    
    # Application Installation
    mas_app_id: assist
    mas_app_channel: "{{ mas_app_channel }}"

    cos_type: "{{ cos_type }}"
    cpd_service_name: wd
    cpd_product_version: "{{ cpd_product_version }}"
    cpd_instance_namespace: "{{ cpd_instance_namespace }}"

    # Application Configuration
    mas_workspace_id: "{{ mas_workspace_id }}"

    # Entitlement key can be passed by either the key or a secret name
    ibm_entitlement_secret: "{{ ibm_entitlement_secret }}"

    ## We will remove this variable when the object storage config product ansible is fixed
    ## until then the activate_app flag will default to false.
    activate_app: "{{ activate_app }}"
    
  pre_tasks:
    # Check if Assist is already installed first.
    - name: "Check for Asstst already installed"
      kubernetes.core.k8s_info:
        api_version: apps.mas.ibm.com/v1
        kind: AssistWorkspace
        name: "{{ mas_instance_id }}-{{ mas_workspace_id }}"
        namespace: "mas-{{ mas_instance_id }}-{{ mas_app_id }}"
      register: op_app_ws_cr_result

    # End the play if it's in Ready state.
    - name: "Check if all components are deployed and Ready"
      when: (op_app_ws_cr_result.resources is defined) and
            (op_app_ws_cr_result.resources | length > 0) and
            (op_app_ws_cr_result.resources | json_query('[*].status.conditions[?type==`Ready`][].status') | select ('match','True') | list | length == 1)
      meta: end_play  

    # Lookup entitlement key via secret if it's declared and the ibm_entitlement_key isn't
    - name: "Lookup IBM Entitlement Key credentials"
      when: (ibm_entitlement_secret is defined and ibm_entitlement_secret != "")
      ignore_errors: true      
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: "{{ ibm_entitlement_secret }}"
        namespace: "masauto-operator-system"
      register: entitlement_credentials 
    
    - name: "Set entitllement based on secret"
      when: (entitlement_credentials.api_found) and
            (ibm_entitlement_secret is defined and ibm_entitlement_secret != "")
      ignore_errors: true
      set_fact:
        ibm_entitlement_key: "{{ entitlement_credentials.resources[0].data.password | b64decode }}"

    # For the full set of supported environment variables refer to the playbook documentation
    - name: Check for required environment variables
      assert:
        that:
          - ibm_entitlement_key is defined and ibm_entitlement_key != ""
          - mas_app_channel is defined and mas_app_channel != ""
          - cos_type is defined and cos_type != ""
          - cpd_product_version is defined and cpd_product_version != ""
          - cpd_instance_namespace is defined and cpd_instance_namespace != ""
          - activate_app is defined and activate_app != "" # remove flag
        fail_msg: "One or more required variables are not defined"

  roles:
    - role: ibm.mas_devops.cos
    - role: ibm.mas_devops.cp4d_service

    - role: ibm.mas_devops.suite_config
      when: activate_app|bool # remove flag when obj store cfg product ansible is fixed until then will be manual activation

    - role: ibm.mas_devops.suite_app_install
      vars:
        mas_entitlement_key: "{{ ibm_entitlement_key }}"

    - role: ibm.mas_devops.suite_app_config
      when: activate_app|bool # remove flag when obj store cfg product ansible is fixed until then will be manual activation

