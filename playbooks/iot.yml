# Add IoT latest application to an existing MAS Core 8.8.x installation
#
# Dependencies:
# - Core is installed
#
- hosts: localhost
  any_errors_fatal: true
  collections:
    - community.kubernetes
    - community.general
    - operator_sdk.util
    - kubernetes.core
    - ibm.mas_devops
    - ibm.cloudcollection

  vars:
    # Cluster-wide dependencies for MAS 
    mas_config_dir: "~/masconfig"
    ibm_entitlement_key: "{{ ibm_entitlement_key }}"
    mas_instance_id: "{{ mas_instance_id }}"
    
    # Application Dependencies
    db2_instance_name: "{{ db2_instance_name }}"

    # Application Installation
    mas_app_id: iot
    mas_app_channel: "{{ mas_app_channel }}"

    # Application Configuration
    mas_workspace_id: "{{ mas_workspace_id }}"

    # Entitlement key can be passed by either the key or a secret name
    ibm_entitlement_secret: "{{ ibm_entitlement_secret }}"
    
  pre_tasks:
    # Check if IoT is already installed first.
    - include_tasks: "{{ playbook_dir }}/../tasks/preinstall_check_iot.yml"  

    # Lookup entitlement key via secret if it's declared and the ibm_entitlement_key isn't
    - include_tasks: "{{ playbook_dir }}/../tasks/lookup_entitlement.yml"

    # For the full set of supported environment variables refer to the playbook documentation
    - name: Check for required environment variables
      assert:
        that:
          - ibm_entitlement_key is defined and ibm_entitlement_key != ""
          - mas_app_channel is defined and mas_app_channel != ""
          - kafka_storage_class is defined and kafka_storage_class != ""
          - db2_instance_name is defined and db2_instance_name != ""
          - db2_dbname is defined and db2_dbname != ""
          - db2_meta_storage_class is defined and db2_meta_storage_class != ""
          - db2_data_storage_class is defined and db2_data_storage_class != ""
          - grafana_instance_storage_class is defined and grafana_instance_storage_class != ""
          - prometheus_alertmgr_storage_class is defined and prometheus_alertmgr_storage_class != ""
          - prometheus_storage_class is defined and prometheus_storage_class != ""
          - zookeeper_storage_class is defined and zookeeper_storage_class != ""
        fail_msg: "One or more required variables are not defined"

  roles:
    - role: ibm.mas_devops.db2
      vars:
        db2_dbname: "{{ db2_dbname }}"
        db2_instance_name: "{{ db2_instance_name }}"
        db2_meta_storage_class: "{{ db2_meta_storage_class }}" #file storage class
        db2_data_storage_class: "{{ db2_data_storage_class }}" #block storage class
    - role: ibm.mas_devops.cluster_monitoring
      vars:
        grafana_instance_storage_class: "{{ grafana_instance_storage_class }}"
        prometheus_alertmgr_storage_class: "{{ prometheus_alertmgr_storage_class }}"
        prometheus_storage_class: "{{ prometheus_storage_class }}"
    - role: ibm.mas_devops.kafka
      vars:
        kafka_storage_class: "{{ kafka_storage_class }}"
    - role: ibm.mas_devops.suite_config

    - role: ibm.mas_devops.suite_app_install
      vars:
        mas_entitlement_key: "{{ ibm_entitlement_key }}"
    - role: ibm.mas_devops.suite_app_config
