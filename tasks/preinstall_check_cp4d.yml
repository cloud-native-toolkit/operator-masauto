    # Check for current install of CP4D components
    ## These checks will be moved to a separate task in future releases to ease readability
    - name: "Check for existing CP4D Foundation"
      when: (install_cp4d_platform|bool) and
            not (install_watson_studio|bool) and
            not (install_watson_machine_learning|bool) and
            not (install_analytics_engine|bool) and
            not (install_watson_openscale|bool) and
            not (install_watson_discovery|bool)
      kubernetes.core.k8s_info:
        api_version: zen.cpd.ibm.com/v1
        name: lite-cr
        namespace: "{{ cpd_instance_namespace }}"
        kind: ZenService
      register: op_zenservice_lookup

    - name: "Check if CP4D Foundation is already in completed state"
      when: (op_zenservice_lookup.resources[0].status.zenStatus is defined) and
            (op_zenservice_lookup.resources[0].status.zenStatus == "Completed")
      meta: end_play  

    # if WSL specified in CR check for that
    - name: "Check for existing WSL"
      when: not (install_cp4d_platform|bool) and
            (install_watson_studio|bool) and
            not (install_watson_machine_learning|bool) and
            not (install_analytics_engine|bool) and
            not (install_watson_openscale|bool) and
            not (install_watson_discovery|bool)
      kubernetes.core.k8s_info:
        api_version: ws.cpd.ibm.com/v1beta1
        name: ws-cr
        namespace: "{{ cpd_instance_namespace }}"
        kind: WS
      register: op_wsl_lookup

    - name: "Check if WSL is already in completed state"
      when: (op_wsl_lookup.resources is defined) and
            (op_wsl_lookup.resources | length == 1) and 
            (op_wsl_lookup.resources[0].status is defined) and 
            (op_wsl_lookup.resources[0].status.wsStatus is defined) and 
            (op_wsl_lookup.resources[0].status.wsStatus == "Completed")
      meta: end_play 

    # if WML specified in CR check for that
    - name: "Check for existing WML"
      when: not (install_cp4d_platform|bool) and
            not (install_watson_studio|bool) and
            (install_watson_machine_learning|bool) and
            not (install_analytics_engine|bool) and
            not (install_watson_openscale|bool) and
            not (install_watson_discovery|bool)
      kubernetes.core.k8s_info:
        api_version: wml.cpd.ibm.com/v1beta1
        name: wml-cr
        namespace: "{{ cpd_instance_namespace }}"
        kind: WmlBase
      register: op_wml_lookup

    - name: "Check if WML is already in completed state"
      when: (op_wml_lookup.resources is defined) and
            (op_wml_lookup.resources | length == 1) and
            (op_wml_lookup.resources[0].status is defined) and
            (op_wml_lookup.resources[0].status.wmlStatus is defined) and 
            (op_wml_lookup.resources[0].status.wmlStatus == "Completed")
      meta: end_play 

    # if Spark specified in CR check for that
    - name: "Check for existing Spark"
      when: not (install_cp4d_platform|bool) and
            not (install_watson_studio|bool) and
            not (install_watson_machine_learning|bool) and
            (install_analytics_engine|bool) and
            not (install_watson_openscale|bool) and
            not (install_watson_discovery|bool)
      kubernetes.core.k8s_info:
        api_version: ae.cpd.ibm.com/v1
        name: analyticsengine-sample
        namespace: "{{ cpd_instance_namespace }}"
        kind: AnalyticsEngine
      register: op_spark_lookup

    - name: "Check if Spark is already in completed state"
      when: (op_spark_lookup.resources is defined) and
            (op_spark_lookup.resources | length == 1) and
            (op_spark_lookup.resources[0].status is defined) and
            (op_spark_lookup.resources[0].status.analyticsengineStatus is defined) and
            (op_spark_lookup.resources[0].status.analyticsengineStatus == "Completed")
      meta: end_play 

    # if AI specified in CR check for that
    - name: "Check for existing AI"
      when: not (install_cp4d_platform|bool) and
            not (install_watson_studio|bool) and
            not (install_watson_machine_learning|bool) and
            not (install_analytics_engine|bool) and
            (install_watson_openscale|bool) and
            not (install_watson_discovery|bool)
      kubernetes.core.k8s_info:
        api_version: wos.cpd.ibm.com/v1
        name: aiopenscale
        namespace: "{{ cpd_instance_namespace }}"
        kind: WOService
      register: op_ai_lookup

    - name: "Check if AI is already in completed state"
      when: (op_ai_lookup.resources is defined) and
            (op_ai_lookup.resources | length == 1) and
            (op_ai_lookup.resources[0].status is defined) and
            (op_ai_lookup.resources[0].status.wosStatus is defined) and
            (op_ai_lookup.resources[0].status.wosStatus == "Completed")
      meta: end_play 

    # if WD specified in CR check for that
    - name: "Check for existing WD"
      when: not (install_cp4d_platform|bool) and
            not (install_watson_studio|bool) and
            not (install_watson_machine_learning|bool) and
            not (install_analytics_engine|bool) and
            not (install_watson_openscale|bool) and
            (install_watson_discovery|bool)
      kubernetes.core.k8s_info:
        api_version: discovery.watson.ibm.com/v1
        name: wd
        namespace: "{{ cpd_instance_namespace }}"
        kind: WatsonDiscovery
      register: op_wd_lookup

    - name: "Check if WD is already in completed state"
      when: (op_wd_lookup.resources is defined) and
            (op_wd_lookup.resources | length == 1) and
            (op_wd_lookup.resources[0].status is defined) and
            (op_wd_lookup.resources[0].status.watsonDiscoveryStatus is defined) and
            (op_wd_lookup.resources[0].status.watsonDiscoveryStatus == "Completed")
      meta: end_play